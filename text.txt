
Ціль: реалізувати веб-додаток для вивчення слів ( англомовних чи інших ).
Інструменти: React, Redux, Js.

Потрібно реалізувати веб-додаток для вивчення слів.
Додаток - це онлайн словник з невеликим інтерактивом.
Основна ідея в тому що користувач вводить якісь слова і їх переклад, наприклад “dog - собака”,
користувач вводить в словник деяке число слів і потім може перевіряти чи пам'ятає їх.

Перевірка проходить в виді простої гри:

Користувач нажимає на кнопку “Повторити слова”
З всього словника обирается 10 слів.
Слова перемішуються між собою в рандомному порядку.
З'являється екран з словом на англійські і 4 переклади ( 1 з яких вірний і 3 невірних ). 3 невірних перекладів берутся з інших слів.
Користувач клацає на один з 4 перекладів і користувача переводить на наступне слово.
Коли користувач завершує 10 тест його переводить на экран “Результати” на якому він бачить результати свого тесту, в виді відсотка успішності.
100% - всі слова вірні, 0% - всі слова не вірні.

В додатку повинні бути реалізовані наступні сторінки:
Онлайн словник - головна сторінка з списком всіх слів.
Сторінка додавання слова - сторінка з формою для додавання нового слова та його перекладу. Перехід з головної сторінки.
Сторінка перевірки слів - інтерактив який описаний вище. Перехід з головної сторінки.
Результати перевірки - описано вище.

Додатково ( реалізація по бажанню ) :
Можна взяти стиль з одного з цих дизайнів ( https://dribbble.com/tags/admin_ui ), на дизайн не потібно витрачати багато часу”))
Історія перевірок - всі перевірки які проходить користувач мають зберігатись, щоб користувач мав можливість подивитись свої перевірки.
Також на цій сторінці має відображатись середній відсоток активності.


screens:
*MainPage/ navigate to AddWordPage, CheckWordPage
*AddWordPage
*CheckWordPage


behavior:
*MainPage
All added words/translations here


*AddWordPage
Input form with 2 inputs -> the word and translation
store to localstorage as [key(word): value(translation)]

*CheckWordPage
Button  “Повторити слова”
When push -> fetch 10 random words from store to local state ->
opens modal with 1 word and 4 mixed variants of translation in buttons ->
1 word takes from correct translation place, 3 words random another ->
when transbutton pushed -> check target valure -> if state.word.value = target value -> correct try stored in tri count state ->
modal shows next word ->
when local words state empty -> opens results modal with text "Here is your results: tries count